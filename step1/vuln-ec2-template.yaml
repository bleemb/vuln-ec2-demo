AWSTemplateFormatVersion: '2010-09-09'
Description: Deploy a vulnerable webserver
Parameters:
  WebServerIngressLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: 9
    MaxLength: 18
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: Please provide an IP addrese in the format of x.x.x.x/32
  LatestAmiId:
    Type:  'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/canonical/ubuntu/server/20.04/stable/current/amd64/hvm/ebs-gp2/ami-id'
  Subnet:
    Type: String
  DeploymentVPC:
    Type: String

Resources:
  vulnWebServer:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.small
      IamInstanceProfile: !Ref webServerInstanceProfile
      SecurityGroupIds: 
      - !Ref 'InstanceSecurityGroup'
      ImageId: !Ref 'LatestAmiId'
      SubnetId: !Ref Subnet
      UserData:
        Fn::Base64: |
          #!/bin/bash
          sudo yum install git -y
          cd /opt
          sudo git clone https://github.com/sethsec/Nodejs-SSRF-App.git
          cd Nodejs-SSRF-App/
          sudo ./install.sh
          sudo nodejs ssrf-demo-app.js
      Tags:
        - Key: Name
          Value: vulnerable-instance
  webServerInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: ssrfmetadatademo
      Path: /
      Roles:
        - !Ref webServerRole
  webServerRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      ManagedPolicyArns: 
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
      AssumeRolePolicyDocument:
        Statement: 
          - Action: 
              - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
      Policies:
        - PolicyName: "GetObjectPermissions"
          PolicyDocument:
           Version: "2012-10-17"
           Statement:
              - Effect: "Allow"
                Action: 
                  - "s3:GetObject"
                  - "s3:ListObject"
                Resource:
                  - !Sub arn:aws:s3:::${DataBucket}
                  - !Sub arn:aws:s3:::${DataBucket}/*
        - PolicyName: "ListPermissions"
          PolicyDocument:
           Version: "2012-10-17"
           Statement:
              - Effect: "Allow"
                Action: 
                  - "s3:ListBucket"
                  - "s3:ListAllMyBuckets"
                Resource: "*"

  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable web access via port 80
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: !Ref 'WebServerIngressLocation'
      VpcId: !Ref DeploymentVPC
  DataBucket:
    Type: AWS::S3::Bucket
    Properties: 
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true